name: Build

on: [push]

defaults:
  run:
    shell: bash
jobs:
  Build:
    name: Build release binaries

    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip pyinstaller 
          pip install -r requirements.txt
      - name: Build
        run: pyinstaller obs_manager/GUI/__main__.py --name "${{matrix.os}}-Manager" --windowed --i obs_manager/GUI/hand.ico --noconfirm --add-data 'obs_manager/GUI/*;obs_manager/GUI' --distpath app
      - name: Build Ubuntu
        if: always()
        run: pyinstaller obs_manager/GUI/__main__.py --name "${{matrix.os}}-Manager" --windowed --i obs_manager/GUI/hand.ico --noconfirm --add-data 'obs_manager/GUI/*:obs_manager/GUI' --distpath app
      - name: Deploy artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: app-${{ matrix.os }}
          path: app/${{ matrix.os }}-Manager
          if-no-files-found: error
      - name: create release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: upload windows artifact
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          assets_path: app/${{ matrix.os }}-Manager
          assets_name: Obsidian_Snippet_Manager-Windows.zip
          assets_content_type: application/zip